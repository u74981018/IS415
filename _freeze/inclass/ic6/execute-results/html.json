{
  "hash": "a554e60a4db32fdcbe4db7c67da066af",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class 6\"\nauthor: \"Lucas Vial\"\ndate: \"Sep 23 2024\"\ndate-modified: \"Date\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n  warning: false\n---\n\n\n# [**Lesson 6: Global and Local Measures of Spatial Autocorrelation**](https://is415-ay2024-25t1.netlify.app/outline/lesson06_outline)\n\nBasically just checking if distributions are random, whether they are considered outliers.\n\nNear things are more related than distant things - spatital dependence and spatial autocorrelation\n\n**Spatial Dependency** - Relationship of variables, statistical dependence\n\n**Spatial Autocorrelation** - Term used to describe the presence of systematic spatial variation, used for clustering pm. Can be across continuous surface, fixed sites or areas.\n\n-   Positive Spatial Autocorrelation: There is a correlation, neighbors are similar. Usually apparent in clustering (Correlation Co-Efficient)\n\n-   Negative Spatial Autocorrelation: Checkerbox patterns, \"opposite\" of clustering, neighbours are all dissimiliar, More dissimilar than a random output.\n\n## Moran I\n\nMoran I, Z-Value. Describe how features differ from the values in the study area as a whole.\n\n\\| + - Clustered \\| - - Dispersed \\| 0 - Random \\|\n\n## Geary C\n\nGeary C, Z-Value. Describes how features differ from their immediate neighbours.\n\n\\| \\>1 - Dispersed \\| \\<1 - Clustered \\| 1 - Random \\|\n\n## Z-Score and P-Values \n\nAlpha value of 0.05, Null Hypothesis, lots of rambling about data timeliness and confidence levels/intervals.\n\n## Getis-Ord Global G\n\nOverall concentration or lack of concentration in all pairs that are neighbours. The variable only takes postitive values. Cluster Detection.\n\n## Local Spatial Autocorrelation Statistics \n\nCollection of geospatial statistical analysis methods to find location related tendency\n\n### LISA - Local Indicator of Spatial Association \n\nGiven a set of features and analysis field, the spatial statistics identify spatial clusters of features with high or low values. It also identifies spatial outliers.\n\nHigh-High \\| High-Low \\| Low-High \\| Low-Low\n\n### Morans Local I \n\nDo this for the first step, its Moran's I, but local. You can then find their p-value to check if the correlation is statistically significant.\n\nHot and Cold Spots - High Clusters and Low Clusters\n\nOnly use the significant ones.\n\n**Break**\n\n## Course Announcements \n\nTake-Home Task 2 is due next week Sunday\n\n-   Theres still more slides at the end to do :(\n\n-   Its based off thailand\n\n-   **No Hands-On Excersise this week or next week**\n\n# In-Class \n\n[sfdep](https://sfdep.josiahparry.com/) package: list columns to make an interface\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sfdep, tidyverse, sf, tmap)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan <- st_read(dsn = \"data/6data/data/geospatial\", \n                 layer = \"Hunan\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Hunan' from data source \n  `C:\\Users\\thevi\\OneDrive\\Desktop\\IS415\\IS415\\inclass\\data\\6data\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nhunan2012 <- read_csv(\"data/6data/data/aspatial/Hunan_2012.csv\")\nhunan_GDP <- left_join(hunan,hunan2012) %>%\n  select(1:4, 7, 15)\n```\n:::\n\n\n**Deriving Queens contiguity weights with sfdep methods**\n\n`st_weights()` has three arguments\n\n-   nb: neighbour list objects\n\n-   style: W for row standardized weights, C globally standardised, U is C / n, S is variance-stabilised\n\n-   allow_zero: if true, assigns zero as lagged value to zone without neighbours\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- hunan_GDP %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style=\"W\"),\n         .before = 1)\n#.before puts the column at the front, not the back :) \n```\n:::\n\n\nThis adds a column with the neighbors for each row. c(2,3,4) = row 1 is n with 2,3,4\n\n### Computing Global Moran I \n\nCalculate the Global Moran I, the output is a tibble data.frame. You don't normally do this in examples, more of a test :)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoranI <- global_moran(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt)\nglimpse(moranI)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ I: num 0.301\n $ K: num 7.64\n```\n\n\n:::\n:::\n\n\nK is average neighbors found, I is the thing 😍\n\n**Performing Global Moran's I Test**\n\nThis is the thing you want to run, instead of computing the stats, you want to perform a test with them. use `global_moran_test` as shown below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_test(wm_q$GDPPC, wm_q$nb, wm_q$wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n```\n\n\n:::\n:::\n\n\n\\^ Do analysis stuff's on this\n\n-   Make sure your p-value is low enough (smaller than confidence level at 0.05)\n\n-   THEN use the Moran I statistic to draw conclusions\n\n**Permutation Test**\n\nMonte Carlo should be used to run the simulation. Its supported by sfdep :). You can basically start from this step.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set a seed for reproducibility\nset.seed(1234)\n```\n:::\n\n\nVery Similar to the other test but using `global_moran_perm` and adding the nsim, which is set to 99 for how many times its going to be run through.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_perm(wm_q$GDPPC, \n                  wm_q$nb, \n                  wm_q$wt, \n                  nsim = 99)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.30075, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\nMoran I, statistic is roughly the same, which proves that its stable. We know this because we ran it 100 times 😍\n\n### Computing Local Moran's I \n\nHere we compute the local Moran's I of GDPPC at county level by using the `local_moran` sfdep package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa <- wm_q %>% \n  mutate(local_moran = local_moran(\n    GDPPC, nb, wt, nsim = 99),\n        .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n\nThis creates the lisa data.frame, with lots of helpful statistics, including what region is categorized as (HIGH/HIGH, p, var.....)\n\n-   Lots of p values in this df, It's reccomended that you stick with the same one. (Use p_ii_sim, this will make it the same as your simulation)\n\n-   With the HIGH/LOW columns, the mean and media ones are the important ones.\n\n-   Skewness can help you decide - high skew means you pick median\n\n### **Visualising local Morans I** \n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\nmap1 <- tm_shape(lisa)+\n  tm_fill(\"ii\")+\n  tm_borders(alpha = 0.5)+\n  tm_layout(main.title = \"Local Moran I\")\n  # tm_view(set.zoom.limits = c(6,8))\n  # tm_layout \n    #main.title \n    # main.title.size \n\n# This needs to be assigned labels \nmap2 <- tm_shape(lisa) +\n  tm_fill(\"p_ii_sim\")+ #,\n    #      breaks =  This is where you set your sign level legend \n      #      label) +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Significance Level\")\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](ic6_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n### Lisa Map Visualization \n\nThe LISA Map Visualization is a combination of the p significance level and local moran I, it will graph the Moran correlations when the significance meets its required level (null hypothesis)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_sig <- lisa %>% \n  filter(p_ii < 0.05)\ntm_shape(lisa)+\n  tm_polygons()+\n  tm_borders(alpha=0.5)+\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\")+\n  tm_borders(alpha=0.4)+\n  tm_layout(main.title = \"LISA map\")\n```\n\n::: {.cell-output-display}\n![](ic6_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## Hot and Cold Spot Analysis \n\nComputing Local G\\* statistics (One with and without asterix)\n\nThis is in the same format as the Local Moran I statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_idw <- hunan_GDP %>%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n```\n:::\n\n\nSimilar process to LISA/Moran I stat creation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nHCSA <- wm_idw %>% \n  mutate(local_Gi = local_gstar_perm(\n    GDPPC, nb, wt, nsim = 99),\n    .before = 1) %>%\n  unnest(local_Gi)\nHCSA\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 88 features and 18 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n# A tibble: 88 × 19\n   gi_star cluster   e_gi     var_gi std_dev p_value p_sim p_folded_sim skewness\n     <dbl> <fct>    <dbl>      <dbl>   <dbl>   <dbl> <dbl>        <dbl>    <dbl>\n 1  0.0416 Low     0.0111 0.00000788  0.125  9.00e-1  0.86         0.43    1.74 \n 2 -0.333  Low     0.0114 0.00000955 -0.296  7.67e-1  0.98         0.49    1.02 \n 3  0.281  High    0.0123 0.00000929 -0.0176 9.86e-1  0.7          0.35    1.19 \n 4  0.411  High    0.0112 0.00000942  0.453  6.51e-1  0.42         0.21    1.51 \n 5  0.387  High    0.0113 0.00000816  0.434  6.65e-1  0.58         0.29    1.10 \n 6 -0.368  High    0.0114 0.00000714 -0.384  7.01e-1  0.92         0.46    1.18 \n 7  3.56   High    0.0144 0.00000565  3.25   1.15e-3  0.02         0.01    0.905\n 8  2.52   High    0.0135 0.00000457  1.79   7.30e-2  0.14         0.07    0.629\n 9  4.56   High    0.0143 0.00000404  4.29   1.77e-5  0.02         0.01    0.700\n10  1.16   Low     0.0106 0.00000472  1.53   1.25e-1  0.18         0.09    0.499\n# ℹ 78 more rows\n# ℹ 10 more variables: kurtosis <dbl>, nb <nb>, wts <list>, NAME_2 <chr>,\n#   ID_3 <int>, NAME_3 <chr>, ENGTYPE_3 <chr>, County <chr>, GDPPC <dbl>,\n#   geometry <POLYGON [°]>\n```\n\n\n:::\n:::\n\n\n**Visualisation**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(HCSA)+\n  tm_fill(\"gi_star\")+\n  tm_borders(alpha=0.5)+\n  tm_layout(main.title = \"G*\")\n```\n\n::: {.cell-output-display}\n![](ic6_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA_sig <- HCSA %>% \n  filter(p_sim < 0.05)\n\ntm_shape(HCSA)+\n  tm_polygons()+\n  tm_borders(alpha=0.5)+\ntm_shape(HCSA_sig)+\n  tm_fill(\"gi_star\")+\n  tm_borders(alpha=0.4)\n```\n\n::: {.cell-output-display}\n![](ic6_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "ic6_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}