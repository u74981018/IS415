{
  "hash": "f0dd9378e2e1d9487acbc6cfa5693638",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class 2\"\nauthor: \"Lucas Vial\"\ndate: \"Aug 26 2024\"\ndate-modified: \"Date\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n  warning: false\n---\n\n\nLoad Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, tmap, tidyverse)\n```\n:::\n\n\nImport the shape files\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- st_read(dsn = \"data/2data\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\thevi\\OneDrive\\Desktop\\IS415\\IS415\\inclass\\data\\2data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\n\nSimple features walkthrough\n\ntangent on installing libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#mpsz_kml <- st_read(\"data/2data/MasterPlan2014SubzoneBoundaryWebKML.kml\")\n#this does not work \n```\n:::\n\n\nwrite the shapefile into a kml file\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_write(mpsz, \"data/2data/MasterPlan2014.kml\", delete_dsn = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nDeleting source `data/2data/MasterPlan2014.kml' using driver `KML'\nWriting layer `MasterPlan2014' to data source \n  `data/2data/MasterPlan2014.kml' using driver `KML'\nWriting 323 features with 15 fields and geometry type Multi Polygon.\n```\n\n\n:::\n\n```{.r .cell-code}\n# st_write(object, src)\n# delete dsn = delete existing \n```\n:::\n\n\n2019 No Sea Subzone Boundary Data\n\nKML\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkml2019 <- st_read(\"data/2data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `C:\\Users\\thevi\\OneDrive\\Desktop\\IS415\\IS415\\inclass\\data\\2data\\MasterPlan2019SubzoneBoundaryNoSeaKML.kml' \n  using driver `KML'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\nGeo JSON file\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngjson2019 <- st_read(\"data/2data/MasterPlan2019SubzoneBoundaryNoSeaGEOJSON.geojson\") #%>%\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MasterPlan2019SubzoneBoundaryNoSeaGEOJSON' from data source \n  `C:\\Users\\thevi\\OneDrive\\Desktop\\IS415\\IS415\\inclass\\data\\2data\\MasterPlan2019SubzoneBoundaryNoSeaGEOJSON.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\n # st_transform(crs = 3414)\n```\n:::\n\n\nUse projective maps for geospatial data analysis, avoid using geographical systems, we don't need perfect (real-world) accuracy\n\nCheck values to see if its in projected degrees? or geographical degrees\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#mpsz19_shp <- st_read(dsn = \"data/2data/\", layer = \"MPSV-2019\") \n```\n:::\n\n\nI don't have shapefile files :(\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#popdata <- read_csv(\"data/2data/respopagesexfa2023.csv\")\npopdata <- read_csv(\"data/2data/respopagesex2023.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#popdata2023 <- data %>%\n#  group_by(PA, SZ, AG) %>%\n#  summarise(`POP`=sum(`Pop`)) %>%\n#  ungroup() %>%\n#  pivot_wider(names_from = AG,\n#              values_from = POP)\n#colnames(popdata2023)\n```\n:::\n\n\nData Processing\n\nlots of code sorting into columns/rows\n\nMake all chars upper case via mutate\n\nleft join on the spatial data and this data c Subzone = SZ\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}